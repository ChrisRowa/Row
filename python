from flask import Flask, request, jsonify
from textblob import TextBlob
from collections import Counter
import re

app = Flask(__name__)

# Keyword extraction helper
def extract_keywords(text):
    words = re.findall(r'\w+', text.lower())
    stop_words = set([
        'the', 'is', 'in', 'at', 'to', 'and', 'a', 'i', 'it', 'of', 'for', 'on', 'this', 'that', 'was',
        'with', 'but', 'are', 'my', 'so', 'not', 'be', 'have', 'had', 'we', 'you', 'your', 'our', 'they'
    ])
    return [word for word in words if word not in stop_words and len(word) > 2]

@app.route('/rate_feedback', methods=['POST'])
def rate_feedback():
    data = request.get_json()
    feedback_list = data.get("feedbacks", [])
    if not isinstance(feedback_list, list):
        return jsonify({"error": "feedbacks must be a list"}), 400

    keyword_counter = Counter()
    ratings = []

    for fb in feedback_list:
        text = fb.get("feedback", "")
        analysis = TextBlob(text)
        polarity = analysis.sentiment.polarity
        sentiment = "positive" if polarity > 0.2 else "negative" if polarity < -0.1 else "neutral"
        rating = round((polarity + 1) * 2.5, 2)  # Converts polarity [-1,1] to [0,5] scale

        if sentiment != "positive":
            keyword_counter.update(extract_keywords(text))

        ratings.append({
            "feedback": text,
            "sentiment": sentiment,
            "rating": rating
        })

    suggestions = [kw for kw, _ in keyword_counter.most_common(5)]

    return jsonify({
        "feedback_analysis": ratings,
        "suggested_improvements": suggestions
    })

if __name__ == '__main__':
    app.run(debug=True, host='0.0.0.0', port=5000)
